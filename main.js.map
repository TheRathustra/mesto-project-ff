{"version":3,"file":"main.js","mappings":"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","sources":["webpack://yandex_praktikum/./src/scripts/components/modal.js","webpack://yandex_praktikum/./src/scripts/components/cards.js","webpack://yandex_praktikum/./src/scripts/components/initialData.js","webpack://yandex_praktikum/./src/scripts/components/validation.js","webpack://yandex_praktikum/./src/scripts/components/api.js","webpack://yandex_praktikum/./src/scripts/index.js"],"sourcesContent":["function openModal(popup) {\r\n  openPopup(popup);\r\n  //Повесим на весь документ для нажатия клавиши Esc\r\n  document.addEventListener(\"keydown\", closeModal);\r\n}\r\n\r\nfunction closeModal(event, popup, close = false) {\r\n  if (!popup && event.key === \"Escape\") {\r\n    popup = document.querySelector(\".popup_is-opened\");\r\n  }\r\n\r\n  if (!popup) {\r\n    return false;\r\n  }\r\n\r\n  const popupCloseButton = popup.querySelector(\".popup__close\");\r\n  if (\r\n    event.key === \"Escape\" ||\r\n    event.target === popupCloseButton ||\r\n    !event.target.closest(\".popup__content\") ||\r\n    close\r\n  ) {\r\n    closePopup(popup);\r\n    popup.querySelectorAll('input').forEach((input) => {\r\n      input.value = \"\";\r\n    });\r\n  \r\n    document.removeEventListener(\"keydown\", closeModal);\r\n\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction openPopup(popup) {\r\n  popup.classList.add(\"popup_is-opened\");\r\n}\r\n\r\nfunction closePopup(popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n}\r\n\r\nexport { openModal, closeModal };\r\n","const cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\nfunction createCard(cardData, clickFunctions, cardAPI, profileId) {\r\n  const cardElement = cardTemplate\r\n    .querySelector(\".places__item\")\r\n    .cloneNode(true);\r\n\r\n  adjustDeleteAction(cardElement, cardData, clickFunctions.trash, cardAPI.deleteCard);\r\n  adjustCardImage(cardElement, cardData, clickFunctions.card);\r\n  adjustLikeAction(\r\n    cardElement,\r\n    cardData,\r\n    clickFunctions.like,\r\n    cardAPI.likeCard,\r\n    profileId\r\n  );\r\n\r\n  return cardElement;\r\n}\r\n\r\nfunction adjustDeleteAction(cardElement, cardData, trashCallback, deleteCardAPI) {\r\n  const deleteBtn = cardElement.querySelector(\".card__delete-button\");\r\n  if (trashCallback !== null) {\r\n    deleteBtn.addEventListener(\"click\", (event) => {\r\n      trashCallback(event, cardData, deleteCardAPI);\r\n    });\r\n  } else {\r\n    deleteBtn.classList.add(\"card__delete-button_hidden\");\r\n  }\r\n}\r\n\r\nfunction adjustCardImage(cardElement, cardData, onClickCallback) {\r\n  const cardImage = cardElement.querySelector(\".card__image\");\r\n  cardImage.setAttribute(\"src\", cardData.link);\r\n  cardImage.setAttribute(\"alt\", cardData.name);\r\n  cardElement.querySelector(\".card__title\").textContent = cardData.name;\r\n\r\n  cardImage.addEventListener(\"click\", () => {\r\n    onClickCallback(cardData.name, cardData.link);\r\n  });\r\n}\r\n\r\nfunction adjustLikeAction(\r\n  cardElement,\r\n  cardData,\r\n  callbackOnLike,\r\n  saveLikeCard,\r\n  profileId\r\n) {\r\n  const likeElement = cardElement.querySelector(\".card__like\");\r\n\r\n  const likeBtn = likeElement.querySelector(\".card__like-button\");\r\n  likeBtn.addEventListener(\"click\", (event) => {\r\n    callbackOnLike(event, cardData, saveLikeCard);\r\n  });\r\n\r\n  const likeNumber = likeElement.querySelector(\".card__like-number\");\r\n  likeNumber.textContent = cardData.likes.length;\r\n\r\n  cardData.likes.forEach((like) => {\r\n    if (profileId === like._id) {\r\n      likeBtn.classList.toggle(\"card__like-button_is-active\");\r\n    }\r\n  });\r\n}\r\n\r\nfunction deleteCard(event, cardData, deleteCardAPI) {\r\n  deleteCardAPI(cardData._id);\r\n  let card = event.target.closest(\".card\");\r\n  card.parentElement.removeChild(card);\r\n}\r\n\r\nfunction сlickOnLike(event, card, saveLikeCard) {\r\n  event.target.classList.toggle(\"card__like-button_is-active\");\r\n  let likeElement = event.target.closest(\".card__like\");\r\n  const likeNumber = likeElement.querySelector(\".card__like-number\");\r\n  saveLikeCard(\r\n    card._id,\r\n    event.target.classList.contains(\"card__like-button_is-active\")\r\n  )\r\n    .then((result) => (likeNumber.textContent = result.likes.length))\r\n    .catch((err) => console.log(err));\r\n}\r\n\r\nexport { createCard, deleteCard, сlickOnLike };\r\n","export const initialCards = [\r\n  {\r\n    name: \"Архыз\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n  },\r\n  {\r\n    name: \"Челябинская область\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n  },\r\n  {\r\n    name: \"Иваново\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n  },\r\n  {\r\n    name: \"Камчатка\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n  },\r\n  {\r\n    name: \"Холмогорский район\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n  },\r\n  {\r\n    name: \"Байкал\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n  }\r\n];\r\n\r\nexport const validationSettings = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};","function showInputError(\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  validationSettings\r\n) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.add(validationSettings.inputErrorClass);\r\n  errorElement.classList.add(validationSettings.errorClass);\r\n  errorElement.textContent = errorMessage;\r\n\r\n  const btn = formElement.querySelector(\r\n    validationSettings.submitButtonSelector\r\n  );\r\n  btn.classList.add(validationSettings.inactiveButtonClass);\r\n}\r\n\r\nfunction hideInputError(formElement, inputElement, validationSettings) {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n  inputElement.classList.remove(validationSettings.inputErrorClass);\r\n  errorElement.classList.remove(validationSettings.errorClass);\r\n  errorElement.textContent = \"\";\r\n\r\n  const btn = formElement.querySelector(\r\n    validationSettings.submitButtonSelector\r\n  );\r\n  btn.classList.remove(validationSettings.inactiveButtonClass);\r\n}\r\n\r\nfunction isValid(formElement, inputElement, validationSettings) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      validationSettings\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationSettings);\r\n  }\r\n}\r\n\r\nfunction setEventListeners(formElement, validationSettings) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationSettings.inputSelector)\r\n  );\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      isValid(formElement, inputElement, validationSettings);\r\n    });\r\n  });\r\n}\r\n\r\nfunction enableValidation(validationSettings) {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationSettings.formSelector)\r\n  );\r\n\r\n  formList.forEach((formElement) => {\r\n    clearValidation(formElement, validationSettings);\r\n    setEventListeners(formElement, validationSettings);\r\n  });\r\n}\r\n\r\nfunction clearValidation(formElement, validationSettings) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationSettings.inputSelector)\r\n  );\r\n\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationSettings);\r\n  });\r\n\r\n  const btn = formElement.querySelector(\r\n    validationSettings.submitButtonSelector\r\n  );\r\n  btn.classList.add(validationSettings.inactiveButtonClass);\r\n}\r\n\r\nexport { enableValidation, clearValidation };\r\n","const apiSettings = {\r\n  token: '6181dd13-c179-480c-8203-2aa7bbc59bd3',\r\n  groupdId: 'wff-cohort-18'\r\n}\r\n\r\nconst PATH = `https://nomoreparties.co/v1/${apiSettings.groupdId}/`;\r\nconst headers = ({\r\n  \"Content-Type\": \"application/json\",\r\n  authorization: `${apiSettings.token}`\r\n});\r\n\r\nconst handleResponse = (response) => {\r\n  if (response.ok) {\r\n    return response.json();\r\n  }\r\n\r\n  return Promise.reject(`Ошибка: ${response.status}`);\r\n}\r\n\r\nfunction getProfile() {\r\n  const settings = {\r\n    method: 'GET',\r\n    headers,\r\n  };\r\n  return fetch(PATH + \"users/me\", settings)\r\n    .then(handleResponse); \r\n}\r\n\r\nfunction patchProfile(name, about) {\r\n  const settings = {\r\n    method: 'PATCH',\r\n    headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about\r\n    })\r\n  };\r\n  return fetch(PATH + \"users/me\", settings)\r\n    .then(handleResponse);  \r\n}\r\n\r\nfunction patchAvatar(avatar) {\r\n  const settings = {\r\n    method: 'PATCH',\r\n    headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar\r\n    })\r\n  };\r\n  return fetch(PATH + \"users/me/avatar\", settings)\r\n    .then(handleResponse);  \r\n}\r\n\r\nfunction getCards() {\r\n  const settings = {\r\n    method: 'GET',\r\n    headers,\r\n  };\r\n  return fetch(PATH + \"cards\", settings)\r\n    .then(handleResponse); \r\n}\r\n\r\nfunction postCard(name, link) {\r\n  const settings = {\r\n    method: 'POST',\r\n    headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      link: link\r\n    })\r\n  };\r\n  return fetch(PATH + \"cards\", settings)\r\n    .then(handleResponse); \r\n}\r\n\r\nfunction likeCard(cardId, liked) {\r\n  const settings = {\r\n    method: liked ? 'PUT' : 'DELETE',\r\n    headers\r\n  };\r\n  return fetch(PATH + `cards/likes/${cardId}`, settings)\r\n    .then(handleResponse); \r\n}\r\n\r\nfunction deleteCard(cardId) {\r\n  const settings = {\r\n    method: 'DELETE',\r\n    headers\r\n  };\r\n  return fetch(PATH + `cards/${cardId}`, settings)\r\n    .then(handleResponse); \r\n}\r\n\r\nfunction checkUrl(url) {\r\n  const settings = {\r\n    method: 'HEAD'\r\n  };\r\n  let correctUrl = false;\r\n  fetch(url, settings).then((response) => {\r\n    correctUrl = response.ok;\r\n  }).catch(() => correctUrl = false);\r\n  return correctUrl; \r\n}\r\n\r\nconst makeCrudAPI = () => ({\r\n  getProfile: () => getProfile(),\r\n  patchProfile: (name, about) => patchProfile(name, about),\r\n  patchAvatar: (avatar) => patchAvatar(avatar),\r\n  getCards: () => getCards(),\r\n  addCard: (name, link) => postCard(name, link),\r\n  deleteCard: (cardId) => deleteCard(cardId),\r\n  likeCard: (cardId, liked) => likeCard(cardId, liked),\r\n  checkUrl: (url) => checkUrl(url),\r\n});\r\n\r\nexport const crudAPI = makeCrudAPI(); \r\n","import \"../pages/index.css\";\r\nimport { openModal, closeModal } from \"./components/modal.js\";\r\nimport { createCard, deleteCard, сlickOnLike } from \"./components/cards.js\";\r\nimport { initialCards, validationSettings } from \"./components/initialData.js\";\r\nimport { clearValidation, enableValidation } from \"./components/validation.js\";\r\nimport { crudAPI } from \"./components/api.js\";\r\n\r\nconst placesList = document.querySelector(\".places__list\");\r\nconst content = document.querySelector(\".content\");\r\n\r\nconst editForm = document.querySelector(\".popup_type_edit .popup__form\");\r\nconst addForm = document.querySelector(\".popup_type_new-card  .popup__form\");\r\nconst avatarForm = document.querySelector(\".popup_type_avatar  .popup__form\");\r\n\r\nconst title = content.querySelector(\".profile__title\");\r\nconst description = content.querySelector(\".profile__description\");\r\nconst profileImage = content.querySelector(\".profile__image\");\r\n\r\nconst nameInput = document.querySelector(\".popup__input_type_name\");\r\nconst jobInput = document.querySelector(\".popup__input_type_description\");\r\nconst editButton = document.querySelector(\".profile__edit-button\");\r\nconst addButton = document.querySelector(\".profile__add-button\");\r\nconst avatarButton = document.querySelector(\".profile__avatar-button\");\r\n\r\nconst cardNameInput = document.querySelector(\".popup__input_type_card-name\");\r\nconst urlInput = document.querySelector(\".popup__input_type_url\");\r\nconst avatarInput = document.querySelector(\".popup__input_type_avatar\");\r\n\r\nconst popupTypeNew = document.querySelector(\".popup_type_new-card\");\r\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupTypeAvatar = document.querySelector(\".popup_type_avatar\");\r\n\r\nconst modalImage = document.querySelector(\".popup__image\");\r\nconst modalCaption = document.querySelector(\".popup__caption\");\r\n\r\nconst spinner = document.querySelector(\".spinner\");\r\n\r\nconst handleError = (err) => {\r\n  console.log(err);\r\n};\r\n\r\nconst clickFunctions = {\r\n  trash: deleteCard,\r\n  like: сlickOnLike,\r\n  card: openImage,\r\n};\r\n\r\nlet profileId = undefined;\r\n\r\naddButton.addEventListener(\"click\", () => {\r\n  openModal(popupTypeNew);\r\n});\r\n\r\neditButton.addEventListener(\"click\", () => {\r\n  nameInput.value = title.textContent;\r\n  jobInput.value = description.textContent;\r\n  openModal(popupTypeEdit);\r\n});\r\n\r\navatarButton.addEventListener(\"click\", () => {\r\n  openModal(popupTypeAvatar);\r\n});\r\n\r\nfunction handleNewCardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true, addForm);\r\n\r\n  clickFunctions.trash = deleteCard;\r\n\r\n  crudAPI\r\n    .addCard(cardNameInput.value, urlInput.value)\r\n    .then((card) => {\r\n      const newCard = createCard(card, clickFunctions, crudAPI, profileId);\r\n      closeModal(evt, popupTypeNew, true);\r\n      placesList.prepend(newCard);\r\n    })\r\n    .catch(handleError)\r\n    .finally(renderLoading(false, addForm));\r\n\r\n  addForm.reset();\r\n  clearValidation(addForm, validationSettings);\r\n}\r\n\r\nfunction handleEditProfileFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true, editForm);\r\n\r\n  crudAPI\r\n    .patchProfile(nameInput.value, jobInput.value)\r\n    .then((profileData) => {\r\n      updateProfile(profileData);\r\n    })\r\n    .catch(handleError)\r\n    .finally(renderLoading(false, editForm));\r\n\r\n  closeModal(evt, popupTypeEdit, true);\r\n  clearValidation(editForm, validationSettings);\r\n}\r\n\r\nfunction handleEditAvatarFormSubmit(evt) {\r\n  evt.preventDefault();\r\n  renderLoading(true, avatarForm);\r\n\r\n  crudAPI\r\n    .patchAvatar(avatarInput.value)\r\n    .then((profileData) => {\r\n      profileImage.style.backgroundImage = `url('${profileData.avatar}')`;\r\n    })\r\n    .catch(handleError)\r\n    .finally(renderLoading(false, avatarForm));\r\n\r\n  closeModal(evt, popupTypeAvatar, true);\r\n  clearValidation(avatarForm, validationSettings);\r\n\r\n  avatarForm.reset();\r\n}\r\n\r\naddForm.addEventListener(\"submit\", handleNewCardFormSubmit);\r\neditForm.addEventListener(\"submit\", handleEditProfileFormSubmit);\r\navatarForm.addEventListener(\"submit\", handleEditAvatarFormSubmit);\r\n\r\nfunction openImage(name, link) {\r\n  modalImage.src = link;\r\n  modalImage.alt = \"На фото \" + name;\r\n  modalCaption.textContent = name;\r\n  openModal(popupTypeImage);\r\n}\r\n\r\nfunction addEventListenerForPopup(popup) {\r\n  const popupCloseButton = popup.querySelector(\".popup__close\");\r\n  const currentForm = popup.querySelector('.popup__form');\r\n\r\n  popupCloseButton.addEventListener(\"click\", (event) => {\r\n    if (closeModal(event, popup) && currentForm !== null) {\r\n      clearValidation(currentForm, validationSettings);\r\n    }\r\n  });\r\n\r\n  popup.addEventListener(\"click\", (event) => {\r\n    if (closeModal(event, popup) && currentForm !== null) {\r\n      clearValidation(currentForm, validationSettings);\r\n    }\r\n  });\r\n}\r\n\r\ndocument\r\n  .querySelectorAll(\".popup\")\r\n  .forEach((popup) => addEventListenerForPopup(popup));\r\n\r\nfunction updateProfile(profileData) {\r\n  profileId = profileData._id;\r\n  title.textContent = profileData.name;\r\n  description.textContent = profileData.about;\r\n  profileImage.style.backgroundImage = `url('${profileData.avatar}')`;\r\n}\r\n\r\nenableValidation(validationSettings);\r\n\r\nPromise.all([crudAPI.getProfile(), crudAPI.getCards()])\r\n  .then(([profile, cards]) => {\r\n    updateProfile(profile);\r\n\r\n    cards.forEach((card) => {\r\n      clickFunctions.trash = profileId === card._id ? deleteCard : null;\r\n      const newCard = createCard(card, clickFunctions, crudAPI, profileId);\r\n      placesList.append(newCard);\r\n    });\r\n  })\r\n  .catch(handleError);\r\n\r\nfunction renderLoading(isLoading, currentForm) {\r\n  const btn = currentForm.querySelector(\".popup__button\");\r\n  btn.textContent = isLoading ? \"Сохраняю...\" : \"Сохранить\";\r\n  if (isLoading) {\r\n    spinner.classList.add(\"spinner_visible\");\r\n  } else {\r\n    spinner.classList.remove(\"spinner_visible\");\r\n  }\r\n}\r\n"],"names":["openModal","popup","classList","add","openPopup","document","addEventListener","closeModal","event","close","arguments","length","undefined","key","querySelector","popupCloseButton","target","closest","remove","closePopup","querySelectorAll","forEach","input","value","removeEventListener","cardTemplate","content","createCard","cardData","clickFunctions","cardAPI","profileId","cardElement","cloneNode","trashCallback","deleteCardAPI","deleteBtn","adjustDeleteAction","trash","deleteCard","onClickCallback","cardImage","setAttribute","link","name","textContent","adjustCardImage","card","callbackOnLike","saveLikeCard","likeElement","likeBtn","likes","like","_id","toggle","adjustLikeAction","likeCard","parentElement","removeChild","validationSettings","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","concat","id","clearValidation","Array","from","PATH","headers","authorization","handleResponse","response","ok","json","Promise","reject","status","crudAPI","getProfile","fetch","method","then","patchProfile","about","settings","body","JSON","stringify","patchAvatar","avatar","getCards","addCard","postCard","cardId","liked","checkUrl","url","correctUrl","catch","placesList","editForm","addForm","avatarForm","title","description","profileImage","nameInput","jobInput","editButton","addButton","avatarButton","cardNameInput","urlInput","avatarInput","popupTypeNew","popupTypeEdit","popupTypeImage","popupTypeAvatar","modalImage","modalCaption","spinner","handleError","err","console","log","likeNumber","contains","result","src","alt","updateProfile","profileData","style","backgroundImage","renderLoading","isLoading","currentForm","evt","preventDefault","newCard","prepend","finally","reset","addEventListenerForPopup","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","showInputError","validationMessage","isValid","setEventListeners","enableValidation","all","_ref","_ref2","profile","cards","append"],"sourceRoot":""}